CREATE SEQUENCE user_sequence START WITH 6 INCREMENT BY 1;

CREATE TABLE tb_employees (
    user_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    password VARCHAR(255) NOT NULL,
    role VARCHAR(25) NOT NULL,
    locked BOOLEAN NOT NULL,
    enabled BOOLEAN NOT NULL,
    name VARCHAR(75) NOT NULL,
    rg VARCHAR(50) NOT NULL,
    cpf VARCHAR(11) NOT NULL UNIQUE,
    phone VARCHAR(20),
    position VARCHAR(100),
    department VARCHAR(100),
    email VARCHAR(100) UNIQUE,
    phone_ext VARCHAR(8),
    salary DECIMAL(10,2),
    status INT,
    admission_date DATE,
    termination_date DATE,
    address_street VARCHAR(50) NOT NULL,
    address_number VARCHAR(5) NOT NULL,
    address_complement VARCHAR(25) NOT NULL,
    address_city VARCHAR(50) NOT NULL,
    address_district VARCHAR(25) NOT NULL,
    address_zip_code VARCHAR(8) NOT NULL
);

CREATE TABLE tb_admins (
    user_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    password VARCHAR(255) NOT NULL,
    role VARCHAR(25) NOT NULL,
    locked BOOLEAN NOT NULL,
    enabled BOOLEAN NOT NULL
);

CREATE TABLE tb_departments (
    department_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name_en VARCHAR(50) NOT NULL,
    name_pt_br VARCHAR(50) NOT NULL,
    acronym VARCHAR(5) NOT NULL,
    position_holder_id INT REFERENCES tb_employees(user_id)
);

CREATE TABLE tb_reports (
    report_id INT AUTO_INCREMENT PRIMARY KEY,
    report_owner_id INT NOT NULL REFERENCES tb_employees (user_id),
    affiliation INT,
    area VARCHAR(200),
    budget_euro NUMERIC(10, 2),
    budget_real NUMERIC(10, 2),
    created_at DATE,
    signed_at DATE
);

CREATE TABLE tb_kpis (
    kpi_id INT AUTO_INCREMENT PRIMARY KEY,
    description VARCHAR(255),
    kpi_value NUMERIC(10, 2)
);

CREATE TABLE tb_tasks (
    task_id INT AUTO_INCREMENT PRIMARY KEY,
    description VARCHAR(255) NOT NULL,
    report_id INT REFERENCES tb_reports (report_id)
);

CREATE TABLE report_kpis (
    report_id INT REFERENCES tb_reports (report_id),
    kpi_id INT REFERENCES tb_kpis (kpi_id),
    PRIMARY KEY (report_id, kpi_id)
);
